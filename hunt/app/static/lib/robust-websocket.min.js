/* https://github.com/appuri/robust-websocket */
!function(e,t){"function"==typeof define&&define.amd?define(function(){return e(t,navigator)}):"object"==typeof exports&&"object"==typeof module?module.exports=e(t,navigator):t.RobustWebSocket=e(t,"undefined"!=typeof Mocha?Mocha:navigator)}(function(e,t){var n=function(o,i,r){var c,s,u={close:function(){}},f=this,a=0,l=-1,p=!1,d=!1,m=Object.assign({},n.defaultOptions,"function"==typeof r?{shouldReconnect:r}:r);if("number"!=typeof m.timeout)throw new Error("timeout must be the number of milliseconds to timeout a connection attempt");if("function"!=typeof m.shouldReconnect)throw new Error("shouldReconnect must be a function that returns the number of milliseconds to wait for a reconnect attempt, or null or undefined to not reconnect.");function y(){s&&(clearTimeout(s),s=null)}["bufferedAmount","url","readyState","protocol","extensions"].forEach(function(e){Object.defineProperty(f,e,{get:function(){return u[e]}})});var v=function(e){p&&(y(),g(e))},h=function(){p=!0,u.close(1e3)},b=!1;function E(){b&&(e.removeEventListener("online",v),e.removeEventListener("offline",h),b=!1)}function g(e){if(!m.shouldReconnect.handle1000&&1e3===e.code||d)a=0;else if(!1!==t.onLine){var n=m.shouldReconnect(e,f);"number"==typeof n&&(s=setTimeout(O,n))}else p=!0}function O(){var t="function"==typeof o?o(f):o;s=null,(u=new WebSocket(t,i||void 0)).binaryType=f.binaryType,a++,f.dispatchEvent(Object.assign(new CustomEvent("connecting"),{attempts:a,reconnects:l})),c=setTimeout(function(){c=null,E(),f.dispatchEvent(Object.assign(new CustomEvent("timeout"),{attempts:a,reconnects:l}))},m.timeout),["open","close","message","error"].forEach(function(e){u.addEventListener(e,function(t){f.dispatchEvent(t);var n=f["on"+e];if("function"==typeof n)return n.apply(f,arguments)})}),m.ignoreConnectivityEvents||b||(e.addEventListener("online",v),e.addEventListener("offline",h),b=!0)}f.send=function(){return u.send.apply(u,arguments)},f.close=function(e,t){return"number"!=typeof e&&(t=e,e=1e3),y(),p=!1,d=!0,E(),u.close(e,t)},f.open=function(){u.readyState!==WebSocket.OPEN&&u.readyState!==WebSocket.CONNECTING&&(y(),p=!1,d=!1,O())},Object.defineProperty(f,"listeners",{value:{open:[function(e){c&&(clearTimeout(c),c=null),e.reconnects=++l,e.attempts=a,a=0,p=!1}],close:[g]}}),Object.defineProperty(f,"attempts",{get:function(){return a},enumerable:!0}),Object.defineProperty(f,"reconnects",{get:function(){return l},enumerable:!0}),m.automaticOpen&&O()};return n.defaultOptions={timeout:4e3,shouldReconnect:function(e,t){if(1008!==e.code&&1011!==e.code)return[0,3e3,1e4][t.attempts]},ignoreConnectivityEvents:!1,automaticOpen:!0},n.prototype.binaryType="blob",n.prototype.addEventListener=function(e,t){e in this.listeners||(this.listeners[e]=[]),this.listeners[e].push(t)},n.prototype.removeEventListener=function(e,t){if(e in this.listeners)for(var n=this.listeners[e],o=0,i=n.length;o<i;o++)if(n[o]===t)return void n.splice(o,1)},n.prototype.dispatchEvent=function(e){if(e.type in this.listeners)for(var t=this.listeners[e.type],n=0,o=t.length;n<o;n++)t[n].call(this,e)},n},"undefined"!=typeof window?window:"undefined"!=typeof global?global:this);
