{% extends 'round_files/'|add:round_info.round.url|add:'/subview.tmpl' %}

{% load static %}

{% block subview_title %}Chat Bot{% endblock %}

{% block subview_content %}
<div class="flavor">
    <p>
        Looking for tech support? We usually have live support, but we’re a little busy at the moment, so chat with our bot, check out our <a href="{% url 'puzzle_tech_support_help' 'tech-support' %}">webpage</a>, or our <a href="{% url 'puzzle_view' 'tech-support' %}">email</a>, and I’m sure we can get you what you need.
    </p>
</div>

<style>
#chatcontainer {
    border: 2em black;
    max-height: 40%;
    overflow-y: scroll;
    width: 100%;
}

#chatcontainer > .td {
    vertical-align: top;
}

tr.support {
    background-color: beige;
}

tr.user {
    background-color: aliceblue;
}
input[type=text]{
    width: 80%;
    font-size: large;
    padding: 0.4em 0.3em;
}
input[type=submit]{
    width: 15%;
    font-size: large;
    padding: 0.4em 0.3em;
}
</style>

<h2>Support chat</h2>
<div>
    <div class='chatarea' id='chatcontainer'>
        <table class='table table-bordered' id="chattable">
            <tr class="support"><td>
                support
            </td>
            <td>
                Hi, this is our help talking box! I’m still learning to help and can only reply to things using the ten hundred most used words, initially.
            </td></tr>
        </table>
    </div>
    <form id="chat">
        <input type="text" name="question" id="question">
        <input id="submit" type="submit" value="send">
    </form>
</div>

{% if posthunt_enabled %}
<script type="module" src="{{ puzzle_info.posthunt_static_directory }}stub-chat.js"></script>
{% endif %}

<script type="module">
import Cookies from "{% static 'lib/js-cookie.module.min.js' %}";
$(document).ready(initialisechat);

function insertChatrow(speaker, message) {
    $("#chattable tr:last").after(`<tr class="${speaker}"><td>${speaker}</td><td>${message}</td></tr>`)
}

function handleResponse(data){
    insertChatrow("support", data['a']);
    $("#submit").removeAttr("disabled");
    $("#question").removeAttr("disabled").val("").focus();
}

function submitquestion(event){
    $("#submit").attr("disabled", true);
    $("#question").attr("disabled", true);

    event.preventDefault();

    insertChatrow("user", $("#question").val());

    let formData = {
        q: $("#question").val(),
    }

    if (window.stubChat) {
        handleResponse(window.stubChat(formData));
    } else {
        $.ajax({
            type: "POST",
            url: "{{ puzzle_info.full_path }}msg",
            headers: {"X-CSRFToken": Cookies.get('csrftoken')},
            data: formData,
            dataType: 'json',
            encode: true,
        }).done(handleResponse);
    }

    return false;
}

function initialisechat(){
    $("#question-select").removeAttr("disabled");
    $("#chat").submit(submitquestion);
}
</script>
{% endblock %}
